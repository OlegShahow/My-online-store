"use strict";

window.addEventListener('DOMContentLoaded', () => {



	// ............................... –ü–æ–¥–ø–∏—Å—å –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω ...........................................................................

	const admin = document.querySelector(".header__nav--admin button");
	const navForm = document.querySelector(".header__nav--form");

	admin.addEventListener('click', () => {

		// —É—Å–ª–æ–≤–∏–µ ? –∑–Ω–∞—á–µ–Ω–∏–µ_–µ—Å–ª–∏_–∏—Å—Ç–∏–Ω–∞ : –∑–Ω–∞—á–µ–Ω–∏–µ_–µ—Å–ª–∏_–ª–æ–∂—å

		navForm.style.opacity = navForm.style.opacity === "1" ? "0" : "1";
	})


	// ............................. –ö–Ω–æ–ø–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞  .............................................................................



	const abouts = document.querySelectorAll(".ab");
	const description = document.querySelectorAll(".description");

	abouts.forEach((btn, index) => {
		btn.addEventListener("click", () => {
			// –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –±–ª–æ–∫–∞ description —Å —Ç–µ–º –∂–µ –∏–Ω–¥–µ–∫—Å–æ–º
			description[index].style.display = description[index].style.display === "flex" ? "none" : "flex";
		});
	});



	// –ö–∞–∫ –º–æ–∂–Ω–æ –∫—Ä–∞—Å–∏–≤–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ target:
	// –ú–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π.description –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏:

	// abouts.forEach((btn) => {
	// 	btn.addEventListener("click", (e) => {
	// 		const desc = e.target.closest(".item--about").querySelector(".description");
	// 		desc.style.display = desc.style.display === "flex" ? "none" : "flex";
	// 	});
	// });

	// .............................................................................................................


	// .....................................   –∫–Ω–æ–ø–∫–∏   –°–¢–ê–¢–£–°  ........................................................................


	const statusBtns = document.querySelectorAll(".stat");
	const itemAvas = document.querySelectorAll(".item--availability");

	statusBtns.forEach((btn, index) => {
		btn.addEventListener("click", () => {
			itemAvas[index].textContent =
				itemAvas[index].textContent === "–í –Ω–∞–ª–∏—á–∏–∏"
					? "–í –¥–æ—Ä–æ–≥–µ"
					: "–í –Ω–∞–ª–∏—á–∏–∏";
		});
	});

	// .............................................................................................................

	// ............................. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ .............................................................................
	//  ...........  –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–∞–π—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä !!!!!!!!  




	// –û—Ç–ª–∏—á–Ω–æ, –ø–æ–Ω—è–ª –∑–∞–¥–∞—á—É.–¢—ã —Ö–æ—á–µ—à—å –ø–æ–ª–Ω—ã–π, —Ä–∞–±–æ—á–∏–π frontend - —Å–∫—Ä–∏–ø—Ç —Å —É—á—ë—Ç–æ–º Cloudinary.–Ø –±–µ—Ä—É —Ç–≤–æ–π —Å—Ç–∞—Ä—ã–π –∫–æ–¥ –∏ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é –µ–≥–æ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª —Å —Å–µ—Ä–≤–µ—Ä–æ–º, –≥–¥–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ Cloudinary, + –æ—Å—Ç–∞–≤–ª—é –≤—Å–µ —Ç–≤–æ–∏ –∏ –Ω–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.



	// =======================================
	// –ù–∞—Ö–æ–¥–∏–º —Ñ–æ—Ä–º—É –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
	// =======================================
	const form = document.getElementById("add-card-form");
	const cardsContainer = document.querySelector(".main__cards");

	// =======================================
	// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
	// =======================================

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ —Å —Å–µ—Ä–≤–µ—Ä–∞
	async function getCards() {
		try {
			const response = await fetch("/api/cards");
			if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫: ${response.status}`);
			return await response.json();
		} catch (err) {
			console.error("‚ùå getCards Error:", err);
			return [];
		}
	}

	// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
	async function saveCards(cards) {
		try {
			const response = await fetch("/api/cards", {
				method: "POST",
				headers: { "Content-Type": "application/json" },
				body: JSON.stringify(cards),
			});
			if (!response.ok) {
				const text = await response.text();
				throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫: ${text}`);
			}
		} catch (err) {
			console.error("‚ùå saveCards Error:", err);
		}
	}

	// =======================================
	// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
	// =======================================
	function renderCard(card) {
		const newCard = document.createElement("div");
		newCard.classList.add("item--card");
		console.log("DEBUG card.imgSrc:", card.imgSrc);

		newCard.innerHTML = `
    <div class="item--info">
      <div class="info--public">
        <div class="item--name adds"><p>${card.name}</p></div>
        <div class="item--prize adds"><p>${card.price} <img src="./icon/g1.png" alt="@"></p></div>
        <div class="item--foto adds"><img src="${card.imgSrc}" alt="${card.name}"></div>
        <div class="item--about adds">
          <button class="ab">–û —Ç–æ–≤–∞—Ä–µ</button>
          <div class="description"><p>${card.description}</p></div>
        </div>
        <div class="item--availability adds">${card.availability}</div>
        <div class="item--korzina">
          <button type="button" class="korz--btn">
               <img src="./icon/k2.png" alt="–ö–æ—Ä–∑–∏–Ω–∞">
          </button>
        </div>
      </div>
      <div class="info--admin">
        <div class="admin--delite"><button class="del">–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä</button></div>
        <div class="admin--status"><button class="stat">–°—Ç–∞—Ç—É—Å</button></div>
        <div class="admin--date"><p>–†–∞–∑–º–µ—â–µ–Ω–æ - ${card.date}</p></div>
      </div>
    </div>
  `;

		cardsContainer.appendChild(newCard);

		// =======================================
		// –ö–Ω–æ–ø–∫–∞ "–û —Ç–æ–≤–∞—Ä–µ" - —Å–∫—Ä—ã—Ç—å/–ø–æ–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
		// =======================================
		const abButton = newCard.querySelector(".ab");
		const description = newCard.querySelector(".description");
		abButton.addEventListener("click", () => {
			description.style.display = description.style.display === "flex" ? "none" : "flex";
		});

		// =======================================
		// –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
		// =======================================
		const delButton = newCard.querySelector(".del");
		delButton.addEventListener("click", async () => {
			newCard.remove();
			let updatedCards = await getCards();
			updatedCards = updatedCards.filter(c => !(c.name === card.name && c.price === card.price && c.date === card.date));
			await saveCards(updatedCards);
		});

		// =======================================
		// –ö–Ω–æ–ø–∫–∞ "–°—Ç–∞—Ç—É—Å" - –º–µ–Ω—è—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
		// =======================================
		const statButton = newCard.querySelector(".stat");
		const ava = newCard.querySelector(".item--availability");
		statButton.addEventListener("click", async () => {
			const newStatus = ava.textContent === "–í –Ω–∞–ª–∏—á–∏–∏" ? "–í –¥–æ—Ä–æ–≥–µ" : "–í –Ω–∞–ª–∏—á–∏–∏";
			ava.textContent = newStatus;

			let updatedCards = await getCards();
			const cardIndex = updatedCards.findIndex(c => c.name === card.name && c.price === card.price && c.date === card.date);
			if (cardIndex !== -1) {
				updatedCards[cardIndex].availability = newStatus;
				await saveCards(updatedCards);
			}
		});
	}

	// =======================================
	// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
	// =======================================
	(async () => {
		const cards = await getCards();
		cards.forEach(card => {
			if (card.imgSrc) renderCard(card); // —Ä–µ–Ω–¥–µ—Ä–∏–º —Ç–æ–ª—å–∫–æ —Å URL
		});
	})();

	// =======================================
	// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–æ—Ç–æ
	// =======================================
	form.addEventListener("submit", async (event) => {
		event.preventDefault();

		const name = form.name.value.trim();
		const price = form.price.value.trim();
		const desc = form.desc.value.trim();
		const availability = form.availability.value.trim() || "–í –Ω–∞–ª–∏—á–∏–∏";
		const file = form.photo.files[0];
		const date = form.date.value.trim();

		if (!name || !price || !file) {
			alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω—É –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ.");
			return;
		}

		// =======================================
		// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ /api/upload
		// =======================================
		const formData = new FormData();
		formData.append("photo", file);

		let imgSrc = "";
		try {
			console.log("üìå –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");
			const uploadRes = await fetch("/api/upload", { method: "POST", body: formData });

			const text = await uploadRes.text();
			let data;
			try {
				data = JSON.parse(text);
			} catch (err) {
				console.error("‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ JSON:", text);
				throw new Error("–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ JSON. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /api/upload –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ");
			}

			if (!uploadRes.ok || !data.url) {
				throw new Error(data.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä");
			}

			imgSrc = data.url;
			console.log("‚úÖ URL —Ñ–∞–π–ª–∞ Cloudinary:", imgSrc);
		} catch (err) {
			console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ:", err);
			alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ Cloudinary.");
			return;
		}

		// =======================================
		// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º imgSrc
		// =======================================
		const card = { name, price, description: desc, availability, imgSrc, date };

		// =======================================
		// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ —Ä–µ–Ω–¥–µ—Ä–∏–º
		// =======================================
		let allCards = await getCards();
		allCards.push(card);
		await saveCards(allCards);
		renderCard(card);

		form.reset();
	});




	// –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:
	// –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –∫–æ–¥ localStorage(–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞).
	// –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –±–ª–æ–∫–∏ SERVER READY VERSION, —á—Ç–æ–±—ã –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä.
	// –í—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏.


	// .................................................................................................................



















	// ..........................................................................................................


});