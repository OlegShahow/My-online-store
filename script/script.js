"use strict";

window.addEventListener('DOMContentLoaded', () => {



	// ............................... –ü–æ–¥–ø–∏—Å—å –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω ...........................................................................

	const admin = document.querySelector(".header__nav--admin button");
	const navForm = document.querySelector(".header__nav--form");

	admin.addEventListener('click', () => {

		// —É—Å–ª–æ–≤–∏–µ ? –∑–Ω–∞—á–µ–Ω–∏–µ_–µ—Å–ª–∏_–∏—Å—Ç–∏–Ω–∞ : –∑–Ω–∞—á–µ–Ω–∏–µ_–µ—Å–ª–∏_–ª–æ–∂—å

		navForm.style.opacity = navForm.style.opacity === "1" ? "0" : "1";
	})


	// ............................. –ö–Ω–æ–ø–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞  .............................................................................



	const abouts = document.querySelectorAll(".ab");
	const description = document.querySelectorAll(".description");

	abouts.forEach((btn, index) => {
		btn.addEventListener("click", () => {
			// –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –±–ª–æ–∫–∞ description —Å —Ç–µ–º –∂–µ –∏–Ω–¥–µ–∫—Å–æ–º
			description[index].style.display = description[index].style.display === "flex" ? "none" : "flex";
		});
	});



	// –ö–∞–∫ –º–æ–∂–Ω–æ –∫—Ä–∞—Å–∏–≤–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ target:
	// –ú–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π.description –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏:

	// abouts.forEach((btn) => {
	// 	btn.addEventListener("click", (e) => {
	// 		const desc = e.target.closest(".item--about").querySelector(".description");
	// 		desc.style.display = desc.style.display === "flex" ? "none" : "flex";
	// 	});
	// });

	// .............................................................................................................


	// .....................................   –∫–Ω–æ–ø–∫–∏   –°–¢–ê–¢–£–°  ........................................................................


	const statusBtns = document.querySelectorAll(".stat");
	const itemAvas = document.querySelectorAll(".item--availability");

	statusBtns.forEach((btn, index) => {
		btn.addEventListener("click", () => {
			itemAvas[index].textContent =
				itemAvas[index].textContent === "–í –Ω–∞–ª–∏—á–∏–∏"
					? "–í –¥–æ—Ä–æ–≥–µ"
					: "–í –Ω–∞–ª–∏—á–∏–∏";
		});
	});

	// .............................................................................................................

	// ............................. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ .............................................................................
	//  ...........  –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–∞–π—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä !!!!!!!!  




	// –û—Ç–ª–∏—á–Ω–æ, –ø–æ–Ω—è–ª –∑–∞–¥–∞—á—É.–¢—ã —Ö–æ—á–µ—à—å –ø–æ–ª–Ω—ã–π, —Ä–∞–±–æ—á–∏–π frontend - —Å–∫—Ä–∏–ø—Ç —Å —É—á—ë—Ç–æ–º Cloudinary.–Ø –±–µ—Ä—É —Ç–≤–æ–π —Å—Ç–∞—Ä—ã–π –∫–æ–¥ –∏ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é –µ–≥–æ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª —Å —Å–µ—Ä–≤–µ—Ä–æ–º, –≥–¥–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ Cloudinary, + –æ—Å—Ç–∞–≤–ª—é –≤—Å–µ —Ç–≤–æ–∏ –∏ –Ω–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.



	// =======================================
	// –ù–∞—Ö–æ–¥–∏–º —Ñ–æ—Ä–º—É –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
	// =======================================
	const form = document.getElementById("add-card-form");
	const cardsContainer = document.querySelector(".main__cards");

	// =======================================
	// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ —Å —Å–µ—Ä–≤–µ—Ä–∞
	// =======================================
	async function getCards() {
		try {
			const response = await fetch("/api/cards");
			if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫: ${response.status}`);
			return await response.json();
		} catch (err) {
			console.error("‚ùå getCards Error:", err);
			return [];
		}
	}

	// =======================================
	// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –û–î–ù–û–ô –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
	// =======================================
	async function addCard(cardData) {
		try {
			const formData = new FormData();

			// –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
			formData.append('name', cardData.name);
			formData.append('price', cardData.price);
			formData.append('description', cardData.description || '');
			formData.append('availability', cardData.availability || '–í –Ω–∞–ª–∏—á–∏–∏');

			// –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
			if (cardData.photoFile) {
				formData.append('photo', cardData.photoFile);
			}

			const response = await fetch("/api/cards", {
				method: "POST",
				body: formData  // FormData –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç Content-Type
			});

			if (!response.ok) {
				const errorData = await response.json();
				throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏: ${response.status} - ${JSON.stringify(errorData)}`);
			}

			return await response.json();
		} catch (err) {
			console.error("‚ùå addCard Error:", err);
			throw err;
		}
	}

	// =======================================
	// –£–¥–∞–ª–µ–Ω–∏–µ –û–î–ù–û–ô –∫–∞—Ä—Ç–æ—á–∫–∏
	// =======================================
	async function deleteCard(cardId) {
		try {
			const response = await fetch(`/api/cards/${cardId}`, {
				method: "DELETE"
			});

			if (!response.ok) {
				throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏: ${response.status}`);
			}

			return await response.json();
		} catch (err) {
			console.error("‚ùå deleteCard Error:", err);
			throw err;
		}
	}

	// =======================================
	// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –û–î–ù–û–ô –∫–∞—Ä—Ç–æ—á–∫–∏
	// =======================================
	async function updateCardStatus(cardId, newStatus) {
		try {
			const response = await fetch(`/api/cards/${cardId}`, {
				method: "PUT",
				headers: { "Content-Type": "application/json" },
				body: JSON.stringify({ availability: newStatus })
			});

			if (!response.ok) {
				throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: ${response.status}`);
			}

			return await response.json();
		} catch (err) {
			console.error("‚ùå updateCardStatus Error:", err);
			throw err;
		}
	}

	// =======================================
	// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
	// =======================================
	function renderCard(card) {
		const newCard = document.createElement("div");
		newCard.classList.add("item--card");
		newCard.dataset.id = card.id;

		newCard.innerHTML = `
    <div class="item--info">
        <div class="info--public">
            <div class="item--name adds"><p>${card.name}</p></div>
            <div class="item--prize adds"><p>${card.price} <img src="./icon/g1.png" alt="@"></p></div>
            <div class="item--foto adds"><img src="${card.imgsrc || card.imgSrc}" alt="${card.name}" onerror="this.style.display='none'"></div>
            <div class="item--about adds">
                <button class="ab">–û —Ç–æ–≤–∞—Ä–µ</button>
                <div class="description"><p>${card.description || ""}</p></div>
            </div>
            <div class="item--availability adds">${card.availability}</div>
            <div class="item--korzina">
                <button type="button" class="korz--btn">
                  <a href="corzina.html"><img src="./icon/k2.png" alt="–ö–æ—Ä–∑–∏–Ω–∞"></a>  
                </button>
            </div>
        </div>
        <div class="info--admin">
            <div class="admin--delite"><button class="del">–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä</button></div>
            <div class="admin--status"><button class="stat">–°—Ç–∞—Ç—É—Å</button></div>
            <div class="admin--date"><p>–†–∞–∑–º–µ—â–µ–Ω–æ - ${card.date}</p></div>
        </div>
    </div>
    `;

		cardsContainer.appendChild(newCard);

		// =======================================
		// –ö–Ω–æ–ø–∫–∞ "–û —Ç–æ–≤–∞—Ä–µ"
		// =======================================
		const abButton = newCard.querySelector(".ab");
		const description = newCard.querySelector(".description");
		abButton.addEventListener("click", () => {
			description.style.display = description.style.display === "flex" ? "none" : "flex";
		});

		// =======================================
		// –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
		// =======================================
		const delButton = newCard.querySelector(".del");
		delButton.addEventListener("click", async () => {
			if (confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?")) {
				try {
					await deleteCard(card.id);
					newCard.remove();
					console.log("üóë –ö–∞—Ä—Ç–æ—á–∫–∞ —É–¥–∞–ª–µ–Ω–∞");
				} catch (err) {
					console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:", err);
					alert("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä");
				}
			}
		});

		// =======================================
		// –ö–Ω–æ–ø–∫–∞ "–°—Ç–∞—Ç—É—Å"
		// =======================================
		const statButton = newCard.querySelector(".stat");
		const availabilityElement = newCard.querySelector(".item--availability");
		statButton.addEventListener("click", async () => {
			try {
				const newStatus = card.availability === "–í –Ω–∞–ª–∏—á–∏–∏" ? "–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏" : "–í –Ω–∞–ª–∏—á–∏–∏";
				await updateCardStatus(card.id, newStatus);

				// –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
				availabilityElement.textContent = newStatus;
				card.availability = newStatus;

				console.log("‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω:", newStatus);
			} catch (err) {
				console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:", err);
				alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å");
			}
		});
	}

	// =======================================
	// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
	// =======================================
	async function loadAllCards() {
		try {
			const cards = await getCards();
			cardsContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
			cards.forEach(card => renderCard(card));
			console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${cards.length} –∫–∞—Ä—Ç–æ—á–µ–∫`);
		} catch (err) {
			console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ä—Ç–æ—á–µ–∫:", err);
		}
	}

	// =======================================
	// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
	// =======================================
	form.addEventListener("submit", async (event) => {
		event.preventDefault();

		// –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –Ω–∞–∂–∞—Ç–∏–π
		const submitButton = form.querySelector('button[type="submit"]');
		const originalText = submitButton.textContent;
		submitButton.textContent = "–î–æ–±–∞–≤–ª—è–µ–º...";
		submitButton.disabled = true;

		try {
			const name = form.name.value.trim();
			const price = form.price.value.trim();
			const desc = form.desc.value.trim();
			const availability = form.availability.value.trim() || "–í –Ω–∞–ª–∏—á–∏–∏";
			const file = form.photo.files[0];

			if (!name || !price || !file) {
				alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω—É –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ.");
				return;
			}

			// =======================================
			// –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É (—Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
			// =======================================
			const newCard = await addCard({
				name,
				price,
				description: desc,
				availability,
				photoFile: file
			});

			// =======================================
			// –†–µ–Ω–¥–µ—Ä–∏–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É
			// =======================================
			renderCard(newCard);
			form.reset();

			console.log("‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");
			alert("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");

		} catch (err) {
			console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", err);
			alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: " + err.message);
		} finally {
			// –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
			submitButton.textContent = originalText;
			submitButton.disabled = false;
		}
	});

	// =======================================
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
	// =======================================
	document.addEventListener('DOMContentLoaded', () => {
		console.log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...");
		loadAllCards();
	});

	console.log("‚ú® Frontend JavaScript –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!");













	// ..........................................................................................................


});